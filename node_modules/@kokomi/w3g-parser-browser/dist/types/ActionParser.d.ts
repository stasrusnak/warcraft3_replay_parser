import { ByteBuffer } from "./ByteBuffer";
export declare type AvailableActionData = PauseGameData | ResumeGameData | SetGameSpeedData | IncreaseSpeedData | DecreaseSpeedData | SaveGameData | SaveGameFinishedData | AbilityActionData | PositionAbilityActionData | PositionAndObjectAbilityActionData | ItemActionData | AbilityTwoTargetTwoItemActionData | ChangeSelectionData | AssignGroupHotkeyData | SelectGroupHotkeyData | SelectSubGroupData | PreSubselectionData | Unknown1BData | SelectGroudItemData | CancelHeroRevivalData | RemoveQueuedUnitData | Unknown21Data | SinglePlayerChatData | AllyOptionsData | ResourceTransferData | ChatCommandData | ESCKeyEventData | Unknown62Data | OpenSkillSubmenuData | OpenBuildSubmenuData | MinimapPingData | Unknown69Data | Unknown6AData | SyncIntegerData | ArrowKeyData | UJApiSyncData;
export interface ActionHandlerList {
    [key: number]: (bb: ByteBuffer) => ActionData;
}
export interface ActionData {
    type: number;
    [key: string]: any;
}
export interface PauseGameData extends ActionData {
    type: 0x01;
}
export interface ResumeGameData extends ActionData {
    type: 0x02;
}
export interface SetGameSpeedData extends ActionData {
    type: 0x03;
    speed: number;
}
export interface IncreaseSpeedData extends ActionData {
    type: 0x04;
}
export interface DecreaseSpeedData extends ActionData {
    type: 0x05;
}
export interface SaveGameData extends ActionData {
    type: 0x06;
    fileName: string;
}
export declare const processSaveGame: (bb: ByteBuffer) => SaveGameData;
export interface SaveGameFinishedData extends ActionData {
    type: 0x07;
    unknown: number;
}
export interface AbilityActionData extends ActionData {
    type: 0x10;
    flags: number;
    itemId: number;
    unknownA: number;
    unknownB: number;
}
export declare enum VariableType {
    TYPE_NOTHING = 0,
    TYPE_UNKNOWN = 1,
    TYPE_NULL = 2,
    TYPE_CODE = 3,
    TYPE_INTEGER = 4,
    TYPE_REAL = 5,
    TYPE_STRING = 6,
    TYPE_HANDLE = 7,
    TYPE_BOOLEAN = 8,
    TYPE_INTEGER_ARRAY = 9,
    TYPE_REAL_ARRAY = 10,
    TYPE_STRING_ARRAY = 11,
    TYPE_HANDLE_ARRAY = 12,
    TYPE_BOOLEAN_ARRAY = 13
}
export interface UJApiSyncHashtableData {
    type: 0xa0;
    subType: 0x02;
    payloadLength: number;
    handleId: number;
    parentKey: number;
    childKey: number;
    value?: {
        variableType: VariableType.TYPE_INTEGER;
        integerValue: number;
    } | {
        variableType: VariableType.TYPE_REAL;
        realValue: number;
    } | {
        variableType: VariableType.TYPE_STRING;
        stringValue: string;
    } | {
        variableType: VariableType.TYPE_BOOLEAN;
        booleanValue: number;
    };
    rawValue?: {
        variableType: number;
        data: Uint8Array;
    };
}
export declare type UJApiSyncData = UJApiSyncHashtableData;
export interface PositionAbilityActionData extends ActionData {
    type: 0x11;
    flags: number;
    itemId: number;
    unknownA: number;
    unknownB: number;
    x: number;
    y: number;
}
export interface PositionAndObjectAbilityActionData extends ActionData {
    type: 0x12;
    flags: number;
    itemId: number;
    unknownA: number;
    unknownB: number;
    targetX: number;
    targetY: number;
    objectId1: number;
    objectId2: number;
}
export interface ItemActionData extends ActionData {
    type: 0x13;
    flags: number;
    itemId: number;
    unknownA: number;
    unknownB: number;
    targetX: number;
    targetY: number;
    objectId1: number;
    objectId2: number;
    itemObjectId1: number;
    itemObjectId2: number;
}
export interface AbilityTwoTargetTwoItemActionData extends ActionData {
    type: 0x14;
    flags: number;
    itemIdA: number;
    unknownA: number;
    unknownB: number;
    targetAX: number;
    targetAY: number;
    itemIdB: number;
    unknownC: Uint8Array;
    targetBX: number;
    targetBY: number;
}
export interface ChangeSelectionData extends ActionData {
    type: 0x16;
    mode: number;
    objects: {
        objectId1: number;
        objectId2: number;
    }[];
}
export interface AssignGroupHotkeyData extends ActionData {
    type: 0x17;
    group: number;
    objects: {
        objectId1: number;
        objectId2: number;
    }[];
}
export interface SelectGroupHotkeyData extends ActionData {
    type: 0x18;
    group: number;
    unknown: number;
}
export interface SelectSubGroupData extends ActionData {
    type: 0x19;
    itemId: number;
    objectId1: number;
    objectId2: number;
}
export interface PreSubselectionData extends ActionData {
    type: 0x1a;
}
export interface Unknown1BData extends ActionData {
    type: 0x1b;
    unknownA: number;
    unknownB: number;
    unknownC: number;
}
export interface SelectGroudItemData extends ActionData {
    type: 0x1c;
    unknownA: number;
    objectId1: number;
    objectId2: number;
}
export interface CancelHeroRevivalData extends ActionData {
    type: 0x1d;
    unitId1: number;
    unitId2: number;
}
export interface RemoveQueuedUnitData extends ActionData {
    type: 0x1e;
    slot: number;
    itemId: number;
}
export interface Unknown21Data extends ActionData {
    type: 0x21;
    unknownA: number;
    unknownB: number;
}
export interface SinglePlayerChatData extends ActionData {
    type: 0x20 | 0x22 | 0x23 | 0x24 | 0x25 | 0x26 | 0x27 | 0x28 | 0x29 | 0x2a | 0x2b | 0x2c | 0x2d | 0x2e | 0x2f | 0x30 | 0x31 | 0x32;
}
export interface SinglePlayerChatResourceData extends SinglePlayerChatData {
    type: 0x27 | 0x28 | 0x2d;
    unknown: number;
    count: number;
}
export interface SinglePlayerChatTimeData extends SinglePlayerChatData {
    type: 0x27 | 0x28 | 0x2d;
    time: number;
}
export interface AllyOptionsData extends ActionData {
    type: 0x50;
    slotId: number;
    flags: number;
}
export interface ResourceTransferData extends ActionData {
    type: 0x51;
    slotId: number;
    gold: number;
    lumber: number;
}
export interface ChatCommandData extends ActionData {
    type: 0x60;
    unknownA: number;
    unknownB: number;
    command: string;
}
export interface ESCKeyEventData extends ActionData {
    type: 0x61;
}
export interface Unknown62Data extends ActionData {
    type: 0x62;
    unknownA: number;
    unknownB: number;
    unknownC: number;
}
export interface OpenSkillSubmenuData extends ActionData {
    type: 0x65;
}
export interface OpenBuildSubmenuData extends ActionData {
    type: 0x66;
}
export interface MinimapPingData extends ActionData {
    type: 0x68;
    x: number;
    y: number;
    unknown: number;
}
export interface Unknown69Data extends ActionData {
    type: 0x69;
    unknownC: number;
    unknownD: number;
    unknownA: number;
    unknownB: number;
}
export interface Unknown6AData extends ActionData {
    type: 0x6a;
    unknownA: number;
    unknownB: number;
    unknownC: number;
    unknownD: number;
}
export interface SyncIntegerData extends ActionData {
    type: 0x6b;
    filename: string;
    missionKey: string;
    key: string;
    value: number;
}
export interface ArrowKeyData extends ActionData {
    type: 0x75;
    arrowKey: number;
}
export interface ActionCommandBlock {
    playerId: number;
    actions: ActionData[];
    remaingBuffer: Uint8Array;
}
export declare class ActionParser {
    private actionHandlers;
    constructor(actionHandler?: ActionHandlerList);
    processActionData: (data: Uint8Array) => ActionCommandBlock[];
}
